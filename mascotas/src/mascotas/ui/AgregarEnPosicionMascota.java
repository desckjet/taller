package mascotas.ui;

import java.awt.BorderLayout;
import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import exceptions.NoExisteException;
import mascotas.Mainn;
import mascotas.Mascota;
import mascotas.centralMascota;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Window.Type;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class AgregarEnPosicionMascota extends JFrame {

	private JPanel contentPane;
	/**
     * Creates new form AgregarEnPosicionMascota
     */
	private centralMascota mascotas;
	
    public AgregarEnPosicionMascota(centralMascota mascotas) {
    	this.mascotas = mascotas;
		setTitle("AGREGAR MASCOTA");
		setType(Type.POPUP);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        btnCancelarPosicionMascota = new javax.swing.JButton();
        btnCancelarPosicionMascota.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		GestionDeMascotas vista = new GestionDeMascotas(mascotas);
        		vista.setVisible(true);
        		AgregarEnPosicionMascota.this.dispose();
        	}
        });
        btnFinalizarPosicionMascota = new javax.swing.JButton();
        btnFinalizarPosicionMascota.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		
        		switch (bandera) {
				case 0:
					mascotas.insertarAlComienzo(mascotaTemporal);
					break;
				case 1:
					mascotas.insertarAlFinal(mascotaTemporal);
					break;
				case 2:
					try {
						mascotas.insertarAntesDe(Integer.valueOf(txtAntesDeEsteCodigoMascota.getText()),
								mascotaTemporal);

					} catch (NoExisteException e2) {
						JOptionPane.showMessageDialog(AgregarEnPosicionMascota.this,
								"No hay un código como referencia.", "ERROR", JOptionPane.ERROR_MESSAGE);// Mensaje
																											// bonito
						return;
					}
					break;
				case 3:
					try {
						mascotas.insertarDespuesDe(Integer.valueOf(txtDespuesDeEsteCodigoMascota.getText()),
								mascotaTemporal);

					} catch (NoExisteException e2) {
						JOptionPane.showMessageDialog(AgregarEnPosicionMascota.this,
								"No hay un código como referencia.", "ERROR", JOptionPane.ERROR_MESSAGE);// Mensaje
																											// bonito
						return;
					}

					break;
				default:
					break;
				}
        		JOptionPane.showMessageDialog(null, "Se ha agregado exitosamente");
        		AgregarEnPosicionMascota.this.dispose();
        		
        		GestionDeMascotas vista = new GestionDeMascotas(mascotas);
        		vista.setVisible(true);
        	}
        });
        jPanel1 = new javax.swing.JPanel();
        rbtAlComienzoMascota = new javax.swing.JRadioButton();
        rbtAlComienzoMascota.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if(rbtAlComienzoMascota.isSelected()) {
        			bandera = 0;
        		}
        	}
        });
        rbtAlFinalMascota = new javax.swing.JRadioButton();
        rbtAlFinalMascota.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if(rbtAlFinalMascota.isSelected()) {
        			bandera = 1;
        		}
        	}
        });
        rbtAntesMascota = new javax.swing.JRadioButton();
        rbtAntesMascota.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if(rbtAntesMascota.isSelected()) {
        			bandera = 2;
        		}
        	}
        });
        rbtDespuesMascota = new javax.swing.JRadioButton();
        rbtDespuesMascota.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		if(rbtDespuesMascota.isSelected()) {
        			bandera = 3;
        		}
        	}
        });
        txtDespuesDeEsteCodigoMascota = new javax.swing.JTextField();
        txtDespuesDeEsteCodigoMascota.addKeyListener(new KeyAdapter() {
//      Validación ingreso de texto.
        	public void keyTyped(KeyEvent e) {
        		if (!Character.isDigit(e.getKeyChar())) {
        			e.consume();
                }
                return;
        	}
        });
        
        txtAntesDeEsteCodigoMascota = new javax.swing.JTextField();
        txtAntesDeEsteCodigoMascota.addKeyListener(new KeyAdapter() {
//          Validación ingreso de texto.
        	public void keyTyped(KeyEvent e) {
        		if (!Character.isDigit(e.getKeyChar())) {
        			e.consume();
                }
                return;
        	}
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCancelarPosicionMascota.setText("Cancelar");

        btnFinalizarPosicionMascota.setText("Finalizar");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones ", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Comic Sans MS", 1, 13))); // NOI18N

        rbtAlComienzoMascota.setText("Al comienzo de la lista.");

        rbtAlFinalMascota.setText("Al final de la lista.");

        rbtAntesMascota.setText("Antes de la mascota con el código:");

        rbtDespuesMascota.setText("Después de la mascota con el código:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rbtAlFinalMascota, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtAntesMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbtDespuesMascota))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDespuesDeEsteCodigoMascota)
                    .addComponent(txtAntesDeEsteCodigoMascota))
                .addContainerGap())
            .addComponent(rbtAlComienzoMascota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(rbtAlComienzoMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtAlFinalMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtAntesMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAntesDeEsteCodigoMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtDespuesMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDespuesDeEsteCodigoMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(btnCancelarPosicionMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFinalizarPosicionMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarPosicionMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFinalizarPosicionMascota, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarEnPosicionMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarEnPosicionMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarEnPosicionMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarEnPosicionMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarEnPosicionMascota(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnCancelarPosicionMascota;
    private javax.swing.JButton btnFinalizarPosicionMascota;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rbtAlComienzoMascota;
    private javax.swing.JRadioButton rbtAlFinalMascota;
    private javax.swing.JRadioButton rbtAntesMascota;
    private javax.swing.JRadioButton rbtDespuesMascota;
    private javax.swing.JTextField txtAntesDeEsteCodigoMascota;
    private javax.swing.JTextField txtDespuesDeEsteCodigoMascota;
    public static Mascota mascotaTemporal;
    private int bandera = 0;
    // End of variables declaration                   
}
